//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using InventoryManagment.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Condition = InventoryManagment.Models.Entities.Condition;
using Location = InventoryManagment.Models.Entities.Location;

namespace InventoryManagment.Models
{
    using System;
    using System.Linq;
    
    public partial class InventoryManagmentEntities : DbContext
    {
        public InventoryManagmentEntities()
        {
            // Database.EnsureDeleted();
            if (Database.EnsureCreated())
            {
               
            }
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlite("Data Source=InventoryManagmentDB.db");
        }
        
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<UserRole>()
                .HasKey(ur => new { ur.UserID, ur.RoleID });

            modelBuilder.Entity<Movement>()
                .HasOne(m => m.FromWarehouse)
                .WithMany(w => w.FromMovements)
                .HasForeignKey(m => m.FromWarehouseID)
                .OnDelete(DeleteBehavior.SetNull);

            modelBuilder.Entity<Movement>()
                .HasOne(m => m.ToWarehouse)
                .WithMany(w => w.ToMovements)
                .HasForeignKey(m => m.ToWarehouseID)
                .OnDelete(DeleteBehavior.SetNull);
        }

        public DbSet<Warehouse> Warehouses { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<EquipmentType> EquipmentTypes { get; set; }
        public DbSet<Equipment> Equipments { get; set; }
        public DbSet<Brand> Brands { get; set; }
        public DbSet<Model> Models { get; set; }
        public DbSet<Condition> Conditions { get; set; }
        public DbSet<Movement> Movements { get; set; }
        public DbSet<EmployeeAssignment> EmployeeAssignments { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<Purchase> Purchases { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<UserRole> UserRoles { get; set; }

    }
}
